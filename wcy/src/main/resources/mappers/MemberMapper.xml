<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.wecodeyou.member.repository.IMemberMapper">
         <!-- 내가 어디에 있는 인터페이스를 가져다가 이 파일을 구현클래스로 쓸건지 full경로를 적어줘야함 -->
         <!-- 즉, 이 xml은 IMemberMapper의 구현클래스야! 라는말 -->

   <!-- DB컬럼명과 VO의 필드명을 맞추는(매핑해주는) ResultMap 선언 -->
   <!-- id: 내맘대로 지정 / type: VO클래스의 패키지 경로를 포함한 full경로 작성-->
   <!-- primary key는 id로 작성하여 매핑 -->
   <!-- primary key 아닌 것들은 result로 작성하여 매핑 -->
   <!-- property: VO의 setter명인데 set을 빼고 필드명만 작성 -->
   <!-- column: 데이터베이스의 컬럼명 -->
   
   <!-- 한마디로 DB컬럼의 user_no를 읽어서 VO의 userNo set에 매핑하라는 뜻 -->
   <resultMap id="MemberMap" type="com.it.wecodeyou.member.model.MemberVO">
      <id property="userNo" column="user_no" />
      <result property="userEmail" column="user_email" />
      <result property="userPw" column="user_pw" />
      <result property="userName" column="user_name" />
      <result property="userBirthday" column="user_birthday" />
      <result property="userTel" column="user_tel" />
      <result property="userProfileImg" column="user_profile_img" />
      <result property="userCreatedAt" column="user_created_at" />
      <result property="userModifiedAt" column="user_modified_at" />
      <result property="userLoginAt" column="user_login_at" />
      <result property="userZipcode" column="user_zipcode" />
      <result property="userAddress" column="user_address" />
      <result property="userDetailAddress" column="user_detail_address" />
      <result property="userType" column="user_type" />
      <result property="userPoint" column="user_point" />
      <result property="userInterest" column="user_interest" />
   </resultMap>

   
   <!-- 회원가입 -->
   <insert id="insertMember">
      INSERT
      INTO user
      (user_no,user_email,user_pw,user_name,user_birthday,user_tel,user_zipcode,user_address,user_detail_address,user_type,user_point,user_interest)
      VALUES
      (#{userNo},#{userEmail},#{userPw},#{userName},#{userBirthday},#{userTel},#{userZipcode},#{userAddress},#{userDetailAddress},#{userType},#{userPoint},#{userInterest})
   </insert>
   
   <!-- 정보 수정 (userNo 받아서 생일, 휴대폰번호, 프로필 이미지, 주소 수정, 수정날짜 now로  -->
   <update id="changeInfo">
      UPDATE user SET user_birthday=#{userBirthday}, user_tel=#{userTel}, user_profile_img=#{userProfileImg}, user_modified_at=NOW(), user_address=#{userAddress}
      WHERE user_no=#{userNo}
   </update>
   
   <!-- 비밀번호 변경 (userEmail 받아서 비밀번호 수정)  -->
   <update id="changePw">
      UPDATE user SET user_pw=#{userPw} WHERE user_email=#{userEmail}
   </update>
   
   <!-- 회원탈퇴(userNo 받아서 -->
   <delete id="deleteMember">
      DELETE FROM user WHERE user_no=#{userNo}
   </delete>
   
   <!-- 한 사람 정보 전체 출력 (마이페이지) (userNo 받아서==>  MemberVO 전체 반환) -->
   <select id="getOneInfo" resultMap="MemberMap">
      SELECT * FROM user WHERE user_no=#{userNo}
   </select>
   
   <!-- 회원 전체 정보 출력 (관리자페이지) -->
   <select id="getAllInfo" resultMap="MemberMap">
      SELECT * FROM user
   </select>

   <!-- 이메일 중복체크 -->
   <select id="checkEmail" resultType="int">
      SELECT COUNT(*)
      FROM user
      WHERE user_email=#{userEmail}
   </select>
   
   <!-- 전화번호 중복체크 -->
   <select id="checkTel" resultType="int">
      SELECT COUNT(*)
      FROM user
      WHERE user_tel=#{userTel}
   </select>
   
   <!-- 이메일 찾기 -->
   <select id="findEmail" resultMap="MemberMap">
      SELECT user_email FROM user WHERE user_name=#{userName} and user_tel=#{userTel}
   </select>
   
   <!-- 로그인 체크 -->
   <select id="checkLogin" resultMap="MemberMap">
      SELECT *
      FROM user
      WHERE user_email=#{userEmail}
   </select>
   
   <update id="updateLoginedAt">
	  UPDATE user SET user_login_at = now() WHERE user_email = #{userEmail}
   </update> 
   
   <!-- 설문조사 -->
   <update id="updateInterest">
	  UPDATE user SET user_interest = true WHERE user_no = #{userNo}
   </update>

	<!-- 아이디로 정보 가져오기 -->
	<select id="findMemberById" resultMap="MemberMap">
		SELECT * FROM user WHERE user_email = #{userEmail} 
	</select>
	
	
</mapper>


