<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.it.wecodeyou.purchase.repository.IPurchaseMapper">
	<!-- purchase_no
		purchase_pro_no
		purchase_amount
		purchase_buyer
		purchase_seat_no 
		purchase_date
		purchase_isrefund 
		purchase_refund_date
		-->
	<resultMap id="PurchaseMap"
		type="com.it.wecodeyou.purchase.model.PurchaseVO">
		<id property="purchaseNo" column="purchase_no" />
		<result property="purchaseProNo" column="purchase_pro_no" />
		<result property="purchaseAmount" column="purchase_amount" />
		<result property="purchaseBuyer" column="purchase_buyer" />
		<result property="purchaseSeatNo" column="purchase_seat_no" />
		<result property="purchaseDate" column="purchase_date" />
		<result property="purchaseIsrefund" column="purchase_isrefund" />
		<result property="purchaseRefundDate" column="purchase_refund_date" />
	</resultMap>
	
	<resultMap id="PurchaseResultMap" type="com.it.wecodeyou.purchase.model.PurchaseResultVO">
		<id property="purchaseYM" column="ym" />
		<result property="purchaseY" column="y" />
		<result property="purchaseM" column="m" />
		<result property="earningAnnual" column="e_annual" />
		<result property="earningMonthly" column="e_monthly" />
		<result property="purchaseCount" column="p_count" />
		<result property="earningCount" column="e_count" />
		<result property="refundCount" column="r_count" />
		<result property="refundSum" column="r_sum" />
	</resultMap>
	
	<!-- 구매 -->
	<insert id="insertPurchase">
		INSERT INTO 
		(purchase_no, purchase_pro_no, purchase_amount, purchase_buyer, purchase_seat_no, purchase_date, purchase_isrefund, purchase_refund_date)
		VALUES 
		(#{purchaseNo},#{purchaseProNo},#{purchaseAmount},#{purchaseBuyer},#{purchaseSeatNo},#{purchaseDate},#{purchaseIsrefund},#{purchaseRefundDate})
	</insert>
	
		<!-- 회원 구매 내용 출력 (관리자페이지) -->
	<select id="selectAllPurchase" resultMap="PurchaseMap">
		SELECT * FROM purchase
	</select>

		<!-- 회원번호를 받아서 구매/취소 내역 조회 (유저페이지) -->
	<select id="selectUsersPurchase" resultMap="PurchaseMap">
		SELECT * FROM purchase where purchase_buyer=#{purchaseBuyer}
	</select>

	<!-- 취소/환불 -> isrefund를 false 에서 true로  수정  -->
	<update id="updateRefund">
		UPDATE purchase SET 
		purchase_isrefund=true, purchase_refund_date=now() 
		WHERE 
		purchase_no=#{purchaseNo}
	</update>

	<!-- monthly -->
	<select id="getMonthlyEarnings" resultMap="PurchaseResultMap">
		SELECT CONCAT(YEAR(purchase_date), '-', MONTH(purchase_date)) ym,
		CONCAT(YEAR(purchase_date)) y,
		CONCAT(MONTH(purchase_date)) m,
		sum(purchase_amount)-sum(if(purchase_isrefund = 1, purchase_amount, 0)) e_monthly,
		sum(if(purchase_isrefund = 1, purchase_amount, 0)) r_sum,
		count(purchase_no) p_count,
		sum(if(purchase_isrefund = 0, 1, 0 )) e_count,
		sum(if(purchase_isrefund = 1, 1, 0)) r_count
		from purchase
		GROUP BY ym
		ORDER BY ym ASC
	</select>
	
		<!-- this monthly -->
	<select id="getThisMonthlyEarnings" resultMap="PurchaseResultMap">
		SELECT CONCAT(YEAR(purchase_date), '-', MONTH(purchase_date)) ym,
		CONCAT(YEAR(purchase_date)) y,
		CONCAT(MONTH(purchase_date)) m,
		sum(purchase_amount)-sum(if(purchase_isrefund = 1, purchase_amount, 0)) e_monthly,
		sum(if(purchase_isrefund = 1, purchase_amount, 0)) r_sum,
		count(purchase_no) p_count,
		sum(if(purchase_isrefund = 0, 1, 0 )) e_count,
		sum(if(purchase_isrefund = 1, 1, 0)) r_count
		from purchase
		GROUP BY ym
		ORDER BY ym DESC
		LIMIT 1
	</select>

	<!-- annual -->
	<select id="getAnnualEarnings" resultMap="PurchaseResultMap">
		SELECT
		CONCAT(YEAR(purchase_date), '-', MONTH(purchase_date)) ym,
		CONCAT(YEAR(purchase_date)) y,
		CONCAT(MONTH(purchase_date)) m,
		sum(purchase_amount)-sum(if(purchase_isrefund = 1, purchase_amount, 0)) e_annual,
		sum(if(purchase_isrefund = 1, purchase_amount, 0)) r_sum,
		count(purchase_no) p_count,
		sum(if(purchase_isrefund = 0, 1, 0 )) e_count,
		sum(if(purchase_isrefund = 1, 1, 0)) r_count
		from purchase
		GROUP BY y
		ORDER BY y ASC
	</select>
	
		<!-- this annual -->
	<select id="getThisAnnualEarnings" resultMap="PurchaseResultMap">
		SELECT CONCAT(YEAR(purchase_date), '-', MONTH(purchase_date)) ym,
		CONCAT(YEAR(purchase_date)) y,
		CONCAT(MONTH(purchase_date)) m,
		sum(purchase_amount)-sum(if(purchase_isrefund = 1, purchase_amount, 0)) e_annual,
		sum(if(purchase_isrefund = 1, purchase_amount, 0)) r_sum,
		count(purchase_no) p_count,
		sum(if(purchase_isrefund = 0, 1, 0 )) e_count,
		sum(if(purchase_isrefund = 1, 1, 0)) r_count
		from purchase
		GROUP BY y
		ORDER BY y DESC
		LIMIT 1
	</select>
	
	<select id="selectUsersPurchaseOn" resultMap="PurchaseMap">
		SELECT * FROM purchase where purchase_buyer=#{purchaseBuyer} AND purchase_seat_no is null
	</select>
	
	
	<update id="updateExpire">
		UPDATE purchase SET 
		purchase_seat_no=0 
		WHERE 
		purchase_no=#{purchaseNo}
	</update>
	
</mapper>


