<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
   
   <!-- DB 관련 설정 -->
   <!-- JDBC , DB 관련 빈을 등록하고 관리하는 설정파일 -->
   <!-- 그래서 보통 이름을 바꿔서 쓰는 경우가 일반적임 (예: mvc-config.xml)-->
   
   <!-- 1. 히카리 커넥션풀 빈 등록 -->
   <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
      <property name="jdbcUrl" value="jdbc:mysql://database-1.crib18kv3dqa.ap-northeast-2.rds.amazonaws.com:3306/final?serverTimezone=Asia/Seoul" />
      <property name="username" value="admin" />
      <property name="password" value="kaja123!" />
   </bean> 

	
	<!-- 2. 히카리 데이터소스 빈 등록 -->
	<!-- 위에서 만든 히카리 커넥션풀을 생성자 의존성 주입해줘야함 -->
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- 3. 마이바티스 SQL 동작을 위한 핵심객체 SqlSessionFactory클래스 빈 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<!-- 이게 dao의 역할이기 때문에 웹페이지를 구축하다 보면 dao가 많아지듯이 mapper도 여러개 생성됨 -->
		<!-- mappers 폴더 안에 모든 폴더 안에 Mapper.xml로 끝나는 모든 것을 설정파일로 읽어라 -->
		<property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml" />
	</bean>
	
	<!-- 4. 마이바티스 xml파일을 빈으로 등록하기 위한 스캔 설정 -->
	<!-- 기존에 dao 빈 등록할때 클래스에 @Repository를 붙였었는데, mybatis에서는 클래스가 아닌 xml이 dao 역할을 하기 때문에
		 @Repository를 해줄 수 있는 설정을 해야함 -->
					 <!-- base-package는 인터페이스가 있는 곳의 경로를 입력 (I*Mapper.java) => 패키지까지만  -->
	<mybatis-spring:scan base-package="com.it.wecodeyou.member.repository"/> 
	<mybatis-spring:scan base-package="com.it.wecodeyou.interest.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.interest_list.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.schedule.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.point_purchase.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.article.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.board.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.reply.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.product.repository"/>
 	<mybatis-spring:scan base-package="com.it.wecodeyou.tag.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.atag.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.ptag.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.review.repository"/>
	<mybatis-spring:scan base-package="com.it.wecodeyou.off.repository"/>
	<!-- 이메일 관련 -->
	<!-- 메일 보내기(SEND) -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="kouri1004@gmail.com" />
		<property name="password" value="woori2314" />
		<!-- email요청시는 SMTP -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>



   
</beans>